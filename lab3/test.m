L = [
        [1, 0, 0, 0, 0],
        [2, 1, 0, 0, 0],
        [7, 1, 1, 0, 0],
        [8, 2, 8, 1, 0],
        [1, 8, 2, 8, 1],
    ];
b = [3, 1, 4, 1, 5];

M = [
        [11, -1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, 11, -1, -1, 0, 0, 0, 0, 0, 0],
        [-1, -1, 11, -1, -1, 0, 0, 0, 0, 0],
        [0, -1, -1, 11, -1, -1, 0, 0, 0, 0],
        [0, 0, -1, -1, 11, -1, -1, 0, 0, 0],
        [0, 0, 0, -1, -1, 11, -1, -1, 0, 0],
        [0, 0, 0, 0, -1, -1, 11, -1, -1, 0],
        [0, 0, 0, 0, 0, -1, -1, 11, -1, -1],
        [0, 0, 0, 0, 0, 0, -1, -1, 11, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1, 11]
    ];
b = [0.4121184852417566, -0.7509872467716762, 0.956375928404503, -0.9917788534431158, 0.8509035245341184, -0.5587890488516163, 0.16735570030280691, 0.25382336276203626, -0.6298879942744539, 0.8939966636005579];
L = tril(M, -1);
U = triu(M, 1);
D = diag(diag(M));
iters = 0;
r = ones(10,1);
res = M*r - transpose(b);

while norm(res) > 1e-9
    r = (-D)\(L + U)*r + D\transpose(b);
    res = M*r - transpose(b);
    iters = iters + 1;
end

iters

L = [
        [1, 0, 0, 0, 0],
        [2, 1, 0, 0, 0],
        [7, 1, 1, 0, 0],
        [8, 2, 8, 1, 0],
        [1, 8, 2, 8, 1],
    ];
b = [3, 1, 4, 1, 5];

M = [
        [11, -1, -1, 0, 0, 0, 0, 0, 0, 0],
        [-1, 11, -1, -1, 0, 0, 0, 0, 0, 0],
        [-1, -1, 11, -1, -1, 0, 0, 0, 0, 0],
        [0, -1, -1, 11, -1, -1, 0, 0, 0, 0],
        [0, 0, -1, -1, 11, -1, -1, 0, 0, 0],
        [0, 0, 0, -1, -1, 11, -1, -1, 0, 0],
        [0, 0, 0, 0, -1, -1, 11, -1, -1, 0],
        [0, 0, 0, 0, 0, -1, -1, 11, -1, -1],
        [0, 0, 0, 0, 0, 0, -1, -1, 11, -1],
        [0, 0, 0, 0, 0, 0, 0, -1, -1, 11]
    ];
b = [0.4121184852417566, -0.7509872467716762, 0.956375928404503, -0.9917788534431158, 0.8509035245341184, -0.5587890488516163, 0.16735570030280691, 0.25382336276203626, -0.6298879942744539, 0.8939966636005579];
L = tril(M, -1);
U = triu(M, 1);
D = diag(diag(M));
iters = 0;
r = ones(10,1);
res = M*r - transpose(b);

while norm(res) > 1e-9
    r = -(D+L)\U*r + (D+L)\transpose(b);
    res = M*r - transpose(b);
    iters = iters + 1;
end

iters

%r = D\transpose(b);
%r = (-D)\(L + U)*ones(10,1) + D\transpose(b);
%res = M*r - transpose(b);
%norm_res = norm(res);